/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.63
 * Generated at: 2021-02-25 01:57:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;

public final class MainPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	// 로그인 세션
	String id = (String)session.getAttribute("id");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t\t<title>메인 페이지 테스트</title>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"><!-- style.css와 연결 -->\r\n");
      out.write("\t\t<style>\r\n");
      out.write("\t\t\t/* 테이블로 만든 메뉴의 메인페이지, 마이페이지, 고객의소리, 로그인의 글자뿐만이 아니라 셀을 눌러도 링크로 넘어갈 수 있도록 하기 위해서 설정 */\r\n");
      out.write("\t\t\t.cellIconBox{ /* 셀 전부에 설정을 해주기 위해서 클래스를 cellIconBox로 정해서 이 것만 설정을 해줌 */\r\n");
      out.write("\t\t\t\tdisplay:block;\t/* 한셀 전부를 클릭해도 되게 했음 */\r\n");
      out.write("\t\t\t\twidth:100%;\t/* 해당 셀의 넓이를 꽉채워주려고 100%를 주었습니다. */\r\n");
      out.write("\t\t\t\ttext-decoration:none;\t/* 밑줄을 없애줍니다. */\r\n");
      out.write("\t\t\t\ttext-align: center;\t/* 가운데 정렬 */\r\n");
      out.write("\t\t\t\tfont-size:30px;\t/* 글자크기 */\r\n");
      out.write("\t\t\t\tfont-weight: bold;\t/* 글자를 굵게 해줬습니다 */\r\n");
      out.write("\t\t\t\tcolor:black;\t/* 글자색 */\r\n");
      out.write("\t\t\t}\t\t\t\r\n");
      out.write("\t\t</style>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\r\n");
      out.write("\t\t<!-- header 테그 부분 전체를 복사해주세여 그리고 style.css도 교체해주세요 -->\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- \r\n");
      out.write("\t\t\theader : 웹 문서 맨 윗부분에 있으며 웹사이트 이름, 로그인이나 회원가입, 사이트맵과 같은 글로벌 링크가 구성된 영역\r\n");
      out.write("\t\t\tnav : 본문의 요소들 중에서 세션을 구성하는 요소중 하나로, 링크 중 메뉴와 같이 중요도가 높은 링크를 체계적으로 구성해 놓은 것\r\n");
      out.write("\t\t\tdiv : division의 약자, 경계나 영역을 분활한다는 의미로 브라우져의 화면에 구현되는 영역을 나누고 표현할때 사용\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t태그 안의 id, name, class의 차이\r\n");
      out.write("\t\t\tid는 하나의 페이지에서 이름이 유일한 것으로, 화면을 구성하는 것들에게 모두 따로따로 접근할 때 이용. style 적용시 #id값 으로 쓴다.\r\n");
      out.write("\t\t\tclass는 자주 사용되는 스타일에 적용하는 것으로 생각하면 됨. 여러개를 사용할 수 있습니다. style 적용시 .class값 으로 쓴다.\r\n");
      out.write("\t\t\tname 중목이 가능하며, 그룹으로 접근하고 싶을 때 활용\r\n");
      out.write("\t\t\t -->\r\n");
      out.write("\t\r\n");
      out.write("\t\t<header><!-- HTML 레이아웃 중 하나인 header 부분에 메뉴를 생성 -->\r\n");
      out.write("\t\t\t<nav id = \"logo\">\t<!-- HTML 레이아웃중 하나인 nav 부분에 생성, id는 logo 로 지정해서 style.css에서 logo를 이용해 style을 만들어줌  -->\r\n");
      out.write("\t\t\t\t<a href=\"MainPage.jsp\"> <!-- 로고를 누르면 메인페이지를 갈수 있도록 하는 a 태그 생성 -->\r\n");
      out.write("\t\t\t\t\t<img src=\"pictures/MainLogo.png\" width=\"80\" height=\"80\">\r\n");
      out.write("\t\t\t\t\t\t<!-- 80x80짜리 크기를 가진 이미지를 생성, src에 입력한 경로를 따라서 이미지를 가져옴 -->\r\n");
      out.write("\t\t\t\t</a>\r\n");
      out.write("\t\t\t</nav> <!-- 로고 레이아웃 완료 -->\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<nav id = \"menu\" ><!-- menu라는 id를 가진 레이아웃을 생성 -->\r\n");
      out.write("\t\t\t\t<table>\t<!-- 테이블 생성 -->\r\n");
      out.write("\t\t\t\t\t<tr>\t<!-- 테이블의 한줄을 생성 -->\r\n");
      out.write("\t\t\t\t\t\t<th colspan=\"4\" style=\"text-align: right; height: 41px\">\r\n");
      out.write("\t\t\t\t\t\t\t\t <!-- 4열이 합병되고 오른쪽 정렬, 높이가 41px인 테이블 헤더 생성 -->\r\n");
      out.write("\t\t\t\t\t\t\t");
 if( id == null) { 
      out.write(" <!-- 세션을 이용해 로그인이 되지 않고 있을 때 아래 구문을 수행 -->\r\n");
      out.write("\t\t\t\t\t\t\t\t로그인을 해주세요.\r\n");
      out.write("\t\t\t\t\t\t\t");
 } else { 
      out.write("\t<!-- 로그인이 되었을 경우 아래 구문 수행 -->\r\n");
      out.write("\t\t\t\t\t\t\t    ");
      out.print( id );
      out.write("님 환영합니다.<a href=\"Logout.jsp\">로그아웃</a>\t<!-- 로그인된 사용자의 아이디를 출력 -->\r\n");
      out.write("\t\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</th><!-- 테이블 헤더 완성 -->\r\n");
      out.write("\t\t\t\t\t</tr><!-- 테이블의 한줄을 완성 -->\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 테이블 데이터 셀을 생성 -->\r\n");
      out.write("\t\t\t\t\t\t\t<a class=\"menuLink\" href=\"MainPage.jsp\">메인페이지</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- 세션을 이용해 메인페이지 셀을 눌렀을때 로그인된 아이디 값을 넘겨주면서 메인페이지로 감 -->\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 테이블 데이터 완성 -->\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<a class=\"menuLink\" href=\"MyPage.jsp\">마이페이지</a>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<a class=\"menuLink\" href=\"ServiceMain.jsp\">고객센터</a>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t");
 if( id == null) {	
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 세션을 이용해 로그인이 되지 않았을때 로그인을 하기위해서 로그인페이지로 연결되는 데이터셀을 생성 -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<a class=\"menuLink\" href=\"Login.jsp\">로그인</a>\r\n");
      out.write("\t\t\t\t\t\t\t");
} else {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 로그인이 성공 했을경우 로그아웃을 할 수 있게하는 로그아웃으로 연결되는 셀을 생성 -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<a class=\"menuLink\" href=\"UserUpdate.jsp\">회원 정보</a>\r\n");
      out.write("\t\t\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</td>\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table> <!-- 테이블 완성 -->\r\n");
      out.write("\t\t\t</nav><!-- menu 레이아웃 완료 -->\r\n");
      out.write("\t\t</header> <!-- 헤더 레이아웃 완료 -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<nav id=\"FixedBasket\"><!-- 오른쪽에 고정될 장바구니 디스플레이를 만들기위해서 FixedBasket 아이디를 가진 nav 레이아웃 생성 -->\r\n");
      out.write("\t\t\t<table id=\"BasketContent\" style=\"width:100%\" >\t<!-- 장바구니는 아래로 쭉 나와야 하기 때문에 하나의 열을 가진  테이블을 생성-->\r\n");
      out.write("\t\t\t\t");
 if (session.getAttribute("productlist")!=null){ 
					/* arraylist_basket.jsp에서 세션으로 설정한 productlist를 담을 새로운 리스트를 생성 */
				 	ArrayList<String> productlist1 = (ArrayList)session.getAttribute("productlist"); /* object -> arraylist */
						if(productlist1.size()<5){ /* 최근방문페이지가 5개 보다 작은경우  */
							switch(productlist1.size()) {/* switch-case문을 통해 방문페이지가 1개 2개 3개 4개 인경우 나눔 */
							case 1:
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>최근 본 상품</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr><!-- 방문한페이지주소 (링크)+ 이름으로 표현-->\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-1) );
      out.write(">1.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>호텔이름</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>호텔이름</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>호텔이름</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>호텔이름</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
break;
			case 2:
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>최근방문페이지</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-1) );
      out.write(">1.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-2) );
      out.write(">2.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>호텔이름</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>호텔이름</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>호텔이름</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
break;
							case 3: 
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>최근 본 상품</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-1) );
      out.write(">1.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-2) );
      out.write(">2.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-3) );
      out.write(">3.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>호텔이름</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>호텔이름</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
break;
							case 4:
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>최근 본 상품</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-1) );
      out.write(">1.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-2) );
      out.write(">2.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-3) );
      out.write(">3.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-4) );
      out.write(">4.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>최근 본 상품</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
break;}
      out.write("<!-- 스위치문 닫기 -->\r\n");
      out.write("\t\t\t<!-- if문닫기(배열리스트길이가 5보다 작은경우) -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- 방문한 페이지가 5개 이상인 경우 -->\r\n");
      out.write("\t\t\t");
}else if(productlist1.size()>=5){ 
      out.write("<!-- 길이가 5이상인경우 -->\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>최근 본 상품</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-1) );
      out.write(">1.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-2) );
      out.write(">2.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-3) );
      out.write(">3.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-4) );
      out.write(">4.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(productlist1.get(productlist1.size()-5) );
      out.write(">5.최근본상품</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
}
      out.write("<!-- 길이가 5이상인경우 닫기 -->\r\n");
      out.write("\t\t\t<!-- 방문한 페이지가 없는 경우 기본값으로 비워둠 -->\r\n");
      out.write("\t\t\t");
}else{
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>최근 본 상품</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>호텔이름</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>호텔이름</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>호텔이름</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>호텔이름</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>호텔이름</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t</table><!-- 테이블을 닫음 -->\r\n");
      out.write("\t\t</nav> <!-- 장바구니 레이아웃을 닫아줌 -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<nav id=\"Content\"> <!-- 본문, 각 조원들이 넣게될 본문 레이아웃 생성 -->\r\n");
      out.write("\t\t\t<!-- 메인 페이지의 기본 이미지 -->\r\n");
      out.write("\t\t\t<div style=\"width=85%;\"><!-- Content라는 id를 가진 넓이를 지정한 본문의 넓이의 85%를 사용하도록 설정 -->\r\n");
      out.write("\t\t\t\t<img id=\"mainPicture\" src=\"pictures/MainJeju.jpg\" width=\"800\" height=\"400\"> <!-- 일단 잘 나오는지 보기위해서 이미지 삽입 -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<table style=\"width: 80%; margin-left:100px;\">\r\n");
      out.write("\t\t\t<!-- 각 아이콘들의 정렬을 하기 위해서 1x4의 하나의 테이블을 만들어서 각 데이터셀에 저장 -->\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"cellIconBox\" href=\"ProductSummary.jsp?classification=Hotel\" >\r\n");
      out.write("\t\t\t\t\t\t<!-- 상품요약페이지로 이동을 할떼 Hotel이라는 파라미터를 같이 넘겨줍니다. -->\r\n");
      out.write("\t\t\t\t\t\t\t<img name=\"Hotel\" id=\"HotelIcon\" src=\"pictures/HotelIcon.png\" width=\"100\" height=\"100\">\r\n");
      out.write("\t\t\t\t\t\t\t <!-- 가로,세로 크기 100짜리의 그림을 출력 -->\r\n");
      out.write("\t\t\t\t\t\t\t<br>호텔\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"cellIconBox\" href=\"ProductSummary.jsp?classification=Resort\" > <!-- 상품요약페이지로 이동을 할떼 Resort이라는 파라미터를 같이 넘겨줍니다. -->\r\n");
      out.write("\t\t\t\t\t\t\t<img name=\"Resort\" id=\"ResortIcon\" src=\"pictures/ResortIcon.png\" width=\"100\" height=\"100\">\r\n");
      out.write("\t\t\t\t\t\t\t<br>리조트\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"cellIconBox\" href=\"ProductSummary.jsp?classification=Pension\" >\t<!-- 상품요약페이지로 이동을 할떼 Pension이라는 파라미터를 같이 넘겨줍니다. -->\r\n");
      out.write("\t\t\t\t\t\t\t<img name=\"Pension\" id=\"PensionIcon\" src=\"pictures/PensionIcon.png\" width=\"100\" height=\"100\">\r\n");
      out.write("\t\t\t\t\t\t\t<br>팬션\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<a class=\"cellIconBox\" href=\"ProductSummary.jsp?classification=GuestHouse\" > <!-- 상품요약페이지로 이동을 할떼 GuestHouse이라는 파라미터를 같이 넘겨줍니다. -->\r\n");
      out.write("\t\t\t\t\t\t\t<img name=\"GuestHouse\" id=\"GuestHouseIcon\" src=\"pictures/GuestHouseIcon.png\" width=\"100\" height=\"100\">\r\n");
      out.write("\t\t\t\t\t\t\t<br>게/하\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</nav> <!-- 본문 닫음 -->\r\n");
      out.write("\t</body><!-- body 닫음 -->\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
