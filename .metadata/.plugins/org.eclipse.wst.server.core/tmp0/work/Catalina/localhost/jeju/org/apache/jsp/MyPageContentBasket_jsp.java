/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.63
 * Generated at: 2021-02-25 02:02:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import jeju.ShoppingBagVO;
import jeju.ShoppingBagDB;
import java.util.ArrayList;

public final class MyPageContentBasket_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("jeju.ShoppingBagVO");
    _jspx_imports_classes.add("jeju.ShoppingBagDB");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

// 로그인 세션
String id = (String)session.getAttribute("id");

/* 장바구니에 담은 상품을 보여주기 위해 db처리해주는 코드 */
ShoppingBagDB db = new ShoppingBagDB();
ArrayList<ShoppingBagVO> list = db.read(id);

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>마이 페이지</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("/* 테이블로 만든 메뉴의 메인페이지, 마이페이지, 고객의소리, 로그인의 글자뿐만이 아니라 셀을 눌러도 링크로 넘어갈 수 있도록 하기 위해서 설정 */\r\n");
      out.write("\t\t\t.cellIconBox{ /* 셀 전부에 설정을 해주기 위해서 클래스를 cellIconBox로 정해서 이 것만 설정을 해줌 */\r\n");
      out.write("\t\t\t\tdisplay:block;\t/* 한셀 전부를 클릭해도 되게 했음 */\r\n");
      out.write("\t\t\t\twidth:100%;\r\n");
      out.write("\t\t\t\t/* height:100%; */\r\n");
      out.write("\t\t\t\ttext-decoration:none;\r\n");
      out.write("\t\t\t\ttext-align: center;\t\r\n");
      out.write("\t\t\t\tfont-size:30px;\r\n");
      out.write("\t\t\t\tfont-weight: bold;\r\n");
      out.write("\t\t\t\tcolor:black;\r\n");
      out.write("\t\t\t}\t\t\t\r\n");
      out.write(".part { /* li태그에 대한 영역 */\r\n");
      out.write("\t/* margin vs padding */\r\n");
      out.write("\t/* margin: 바깥쪽 여백의 속성을 지정 => 쉽게 말해 박스와 박스 사이를 조절 위 오른쪽 아래 왼쪽 순으로 밀어주는 느낌 */\r\n");
      out.write("\t/* padding: 안쪽 여백의 속성을 지정 */\r\n");
      out.write("\tlist-style: none;\r\n");
      out.write("\tpadding: 25px;\r\n");
      out.write("\tbackground: #16b4f7; /* li 영역의 배경색 설정 */\r\n");
      out.write("\tmargin: 0px 40px 0px 0px;\r\n");
      out.write("\tborder-radius: 40px 80px; /* 각 li태그마다 둥글게 */\r\n");
      out.write("\ttext-align: center; /* 글씨를 중앙에 맞춤 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".a {\r\n");
      out.write("\tfont-size: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#MyPagehr {\r\n");
      out.write("\tmargin: 0px 0px 5px 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#MyPageleft { /* 왼쪽부분에 해당하는 화면 */\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\twidth: 200px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#MyPageright { /* 오른쪽부분에 해당하는 화면 */\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\twidth: 700px;\r\n");
      out.write("\tmargin: 0px 0px 50px 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#MyPagecenter { /* 내용이 들어갈 영역 */\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\twidth: 700px;\r\n");
      out.write("\theight: 450px;\r\n");
      out.write("\tbackground: white;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<nav id=\"myMain\">\r\n");
      out.write("\t\t<nav id=\"MyTop\">\r\n");
      out.write("\t\t\t<header><!-- HTML 레이아웃 중 하나인 header 부분에 메뉴를 생성 -->\r\n");
      out.write("\t<nav id = \"logo\">\t<!-- HTML 레이아웃중 하나인 nav 부분에 생성, id는 logo 로 지정해서 style.css에서 logo를 이용해 style을 만들어줌  -->\r\n");
      out.write("\t\t<a href=\"MainPage.jsp\"> <!-- 로고를 누르면 메인페이지를 갈수 있도록 하는 a 태그 생성 -->\r\n");
      out.write("\t\t\t<img src=\"pictures/MainLogo.png\" width=\"80\" height=\"80\">\t<!-- 80x80짜리 경로를 따라서 이미지를 가져옴 -->\r\n");
      out.write("\t\t</a>\r\n");
      out.write("\t</nav> <!-- 로고 레이아웃 완료 -->\r\n");
      out.write("\t\r\n");
      out.write("\t<nav id = \"menu\" ><!-- menu라는 id를 가진 레이아웃을 생성 -->\r\n");
      out.write("\t\t<table>\t<!-- 테이블 생성 -->\r\n");
      out.write("\t\t\t<tr>\t<!-- 테이블의 한줄을 생성 -->\r\n");
      out.write("\t\t\t\t<th colspan=\"4\" style=\"text-align: right; height: 41px\"> <!-- 4열이 합병되고 오른쪽 정렬, 높이가 41px인 테이블 헤더 생성 -->\r\n");
      out.write("\t\t\t\t\t");
 if( id == null) { 
      out.write(" <!-- 세션을 이용해 로그인이 되지 않고 있을 때 아래 구문을 수행 -->\r\n");
      out.write("\t\t\t\t\t\t로그인을 해주세요.\r\n");
      out.write("\t\t\t\t\t");
 } else { 
      out.write("\t<!-- 로그인이 되었을 경우 아래 구문 수행 -->\r\n");
      out.write("\t\t\t\t\t    ");
      out.print( id );
      out.write("님 환영합니다.<a href=\"Logout.jsp\">로그아웃</a>\t<!-- 로그인된 사용자의 아이디를 출력 -->\r\n");
      out.write("\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t</th><!-- 테이블 헤더 완성 -->\r\n");
      out.write("\t\t\t</tr><!-- 테이블의 한줄을 완성 -->\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><!-- 테이블 데이터 셀을 생성 -->\r\n");
      out.write("\t\t\t\t\t<a class=\"menuLink\" href=\"MainPage.jsp\">메인페이지</a>\t<!-- 세션을 이용해 메인페이지 셀을 눌렀을때 로그인된 아이디 값을 넘겨주면서 메인페이지로 감 -->\r\n");
      out.write("\t\t\t\t</td><!-- 테이블 데이터 완성 -->\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<a class=\"menuLink\" href=\"MyPage.jsp\">마이페이지</a>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<a class=\"menuLink\" href=\"ServiceMain.jsp\">고객센터</a>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t");
 if( id == null) {
      out.write(" <!-- 세션을 이용해 로그인이 되지 않았을때 로그인을 하기위해서 로그인페이지로 연결되는 데이터셀을 생성 -->\r\n");
      out.write("\t\t\t\t\t\t<a class=\"menuLink\" href=\"Login.jsp\">로그인</a>\r\n");
      out.write("\t\t\t\t\t");
 } else {
      out.write("\t<!-- 로그인이 성공 했을경우 로그아웃을 할 수 있게하는 로그아웃으로 연결되는 셀을 생성 -->\r\n");
      out.write("\t\t\t\t\t\t<a class=\"menuLink\" href=\"UserUpdate.jsp\">회원 정보</a>\r\n");
      out.write("\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t</td>\t\t\t\t\t\t\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table> <!-- 테이블 완성 -->\r\n");
      out.write("\t</nav><!-- menu 레이아웃 완료 -->\r\n");
      out.write("</header> <!-- 헤더 레이아웃 완료 -->\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t\t<nav id=\"MyPageContent\">\r\n");
      out.write("\t\t\t<nav id=\"Content\">\r\n");
      out.write("\t\t\t\t<!-- 마이페이지 목록부분 -->\r\n");
      out.write("\t\t\t\t<div id=\"MyPageleft\">\r\n");
      out.write("\t\t\t\t\t<ul type=\"circle\">\r\n");
      out.write("\t\t\t\t\t\t<li class=\"part\">\r\n");
      out.write("\t\t\t\t\t\t\t<!-- class속성은 CSS에서 내가 li태그에 해당하는 부분을 공통적으로 수정하고자 할 때 class사용 -->\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"MyPageContentInquiry.jsp\">예약조회</a>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t<li class=\"part\"><a href=\"MyPageContentBasket.jsp\">장바구니</a></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- 장바구니 화면부분 -->\r\n");
      out.write("\t\t\t\t<div id=\"MyPageright\">\r\n");
      out.write("\t\t\t\t\t<p class=\"a\">장바구니</p>\r\n");
      out.write("\t\t\t\t\t<hr id=\"MyPagehr\" color=\"#16b4f7\" size=6>\r\n");
      out.write("\t\t\t\t\t<div id=\"MyPagecenter\">\r\n");
      out.write("\t\t\t\t\t\t<!-- right라는 영역안에 center라는 영역을 만들기 위해 설정 -->\r\n");
      out.write("\t\t\t\t\t\t<!-- 세션 설정해서 장바구니 만들기 ArrayList -->\r\n");
      out.write("\t\t\t\t\t\t<!-- 장바구니페이지(session필요x + arraylist)-상품창에서 장바구니담기 버튼 누름 -> java서버에서 버튼 누른 페이지에 대한 주소값 받아오기  -->\r\n");
      out.write("\t\t\t\t\t\t");

							for (int i = 0; i < list.size(); i++) {
							ShoppingBagVO bag = list.get(i);
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<form>\r\n");
      out.write("\t\t\t\t\t\t<table border=\"1\">\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>관심상품</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><a href=");
      out.print(bag.getProduct());
      out.write('>');
      out.print(bag.getProduct_name());
      out.write("</a></td><!-- 장바구니 내에 상품이름을 클릭하면 상품페이지로 이동하기 위해 a태그활용 -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- Line 146~147 삭제버튼을 눌렀을 때 삭제기능처리가 있는 페이지로 넘어간다 -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type = \"hidden\" name = \"id\" value =");
      out.print(bag.getId());
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type = \"hidden\" name = \"product\" value =");
      out.print(bag.getProduct());
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><button formaction=\"ShoppingbagDelete.jsp\">장바구니삭제</button></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t");

							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</nav>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
