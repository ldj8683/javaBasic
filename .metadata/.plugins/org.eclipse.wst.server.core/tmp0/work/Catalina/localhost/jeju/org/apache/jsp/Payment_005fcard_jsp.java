/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.63
 * Generated at: 2021-02-25 01:58:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sun.xml.internal.ws.api.ha.StickyFeature;

public final class Payment_005fcard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.sun.xml.internal.ws.api.ha.StickyFeature");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- 상품명 + 가격받아오기 -->    \r\n");
      out.write("    ");

    String room = request.getParameter("room");
	String cost = request.getParameter("cost");
    
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- https://www.iamport.kr/getstarted 에서 참조하기 -->\r\n");
      out.write("<!-- Line16~17 -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.12.4.min.js\" ></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://cdn.iamport.kr/js/iamport.payment-1.1.5.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("/* getParameterByName함수란?\r\n");
      out.write("\thtml파일에서 url을 통해 파라미터값을 보내고 javascript에서 값을 받기 위해 사용한 함수\r\n");
      out.write("*/\r\n");
      out.write("function getParameterByName(name) {\r\n");
      out.write("    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\r\n");
      out.write("    var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\r\n");
      out.write("        results = regex.exec(location.search);\r\n");
      out.write("    return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("room_name = getParameterByName('room');\r\n");
      out.write("cost = getParameterByName('cost');\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var IMP = window.IMP; // 생략가능\r\n");
      out.write("IMP.init('iamport'); // 'iamport' 대신 부여받은 \"가맹점 식별코드\"를 사용\r\n");
      out.write("\r\n");
      out.write("/* 주문명, 가격, 주문자 이름, 전화번호 등 받아오기  */\r\n");
      out.write("\r\n");
      out.write("\t\t/* 버튼을 눌렀을 떄  결제가 가능하도록 설정하기 위해 pay()라는 함수 생성*/\r\n");
      out.write("  \t\tfunction pay() {\r\n");
      out.write("\t\tIMP.request_pay({   /* IMP.requests_pay : 결제요청함수 Line26~51  */\r\n");
      out.write("\t\t\tpg : 'inicis', // version 1.1.0부터 지원.\r\n");
      out.write("\t\t\tpay_method : 'card',\r\n");
      out.write("\t\t\tmerchant_uid : 'merchant_' + new Date().getTime(),\r\n");
      out.write("\t\t\tname : room_name, //상품명\r\n");
      out.write("\t\t\tamount : cost,//상품가격\r\n");
      out.write("\t\t\tbuyer_email : 'iamport@siot.do',\r\n");
      out.write("\t\t\tbuyer_name : '구매자이름',\r\n");
      out.write("\t\t\tbuyer_tel : '010-1234-5678',\r\n");
      out.write("\t\t\tbuyer_addr : '서울특별시 강남구 삼성동',\r\n");
      out.write("\t\t\tbuyer_postcode : '123-456',\r\n");
      out.write("\t\t\tm_redirect_url : 'https://www.yourdomain.com/payments/complete'\r\n");
      out.write("\t\t}, \r\n");
      out.write("\t\tfunction(rsp) {\r\n");
      out.write("\t\t\tif (rsp.success) { /* 결제성공시 */\r\n");
      out.write("\t\t\t\tvar msg = '결제가 완료되었습니다.';\r\n");
      out.write("\t\t\t\tmsg += '고유ID : ' + rsp.imp_uid;\r\n");
      out.write("\t\t\t\tmsg += '상점 거래ID : ' + rsp.merchant_uid;\r\n");
      out.write("\t\t\t\tmsg += '결제 금액 : ' + rsp.paid_amount;\r\n");
      out.write("\t\t\t\tmsg += '카드 승인번호 : ' + rsp.apply_num;\r\n");
      out.write("\t\t\t\tlocation.href=\"MainPage.jsp\"; //결제 성공시 메인화면으로 넘어가기\r\n");
      out.write("\t\t\t} else { /* 결제실패시 */\r\n");
      out.write("\t\t\t\tvar msg = '결제에 실패하였습니다.';\r\n");
      out.write("\t\t\t\tmsg += '에러내용 : ' + rsp.error_msg;\r\n");
      out.write("\t\t\t\tlocation.href=\"ReservationPage.jsp\"; //결제 실패시 다시 결제화면으로 넘어가기\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\talert(msg);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script type=\"text/javascript\"> /* 위에 설정해둔 결제함수 사용을 위한 스크립트문안에 함수호출 */\r\n");
      out.write("pay();\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
